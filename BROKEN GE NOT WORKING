local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

local plr = Players.LocalPlayer
local trailRemote = ReplicatedStorage:WaitForChild("Trail")
local tran = ReplicatedStorage:WaitForChild("Main"):WaitForChild("Transparency")

-- Parts to make invisible
local invisibleParts = {
    "Meshes/14","Meshes/7","Mesh","Meshes/3","Meshes/32","Meshes/33","Meshes/34","Meshes39","Meshes/37","Meshes/38","Meshes/39","Meshes/42","Meshes/52","Meshes/55","Meshes/56","FakeRightLeg","FakeLeftLeg","Meshes/24","Meshes/23","Meshes/28","Meshes/29","FakeHead"
}

-- Parts to make visible
local visibleParts = {
    "nul",
}

local function setupCharacter(char)
    if not char then return end

    local data = plr:WaitForChild("Data")
    local standValue = data:WaitForChild("Stand")

    -- Only continue if Stand value is 42 or 63
    if standValue.Value ~= 7 and standValue.Value ~= 63 then return end

    local stand = char:WaitForChild("Stand")
    local hum = char:WaitForChild("Humanoid", 5)
    if not hum then return end

    task.spawn(function()
        while char.Parent do
            task.wait(0.1)
            for _, obj in ipairs(stand:GetChildren()) do
                -- Make specific parts invisible
                for _, name in ipairs(invisibleParts) do
                    if obj.Name == name and obj:IsA("BasePart") then
                        tran:FireServer(obj, 1)
                    end
                end

                -- Disable welds
                if obj:IsA("WeldConstraint") then
                    obj.Enabled = false
                elseif obj:IsA("Weld") or obj:IsA("Motor6D") then
                    obj.Part0 = nil
                    obj.Part1 = nil
                end
            end
        end
    end)

    task.spawn(function()
        while char.Parent do
            task.wait(0.1)
            for _, obj in ipairs(stand:GetChildren()) do
                -- Make specific parts visible
                for _, name in ipairs(visibleParts) do
                    if obj.Name == name and obj:IsA("BasePart") then
                        tran:FireServer(obj, 0)
                    end
                end
            end
        end
    end)
end

-- Initial setup
if plr.Character then
    setupCharacter(plr.Character)
end

-- Handle character respawn
plr.CharacterAdded:Connect(setupCharacter)
